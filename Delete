class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def length(head):
    count=0
    while head is not None:
        count+=1
        head=head.next
    return count
        
def delete(head, i):
    if i<0 or i>=length(head):
        return head
    
    count=0
    prev=None
    curr=head
    Next=curr.next
    
    while count<i:
        prev=curr
        curr=curr.next
        Next=Next.next
        count+=1
    if Next is None:
        del curr
    if prev is not None:
        
        prev.next=Next
        del curr
        
    else:
        head.next=Next
        del curr
    return head
    
def ll():
    arr=list(int(i) for i in input().strip().split(' '))
    head=None
    tail=None
    for ele in arr:
        if ele==-1:
            break
        newNode=Node(ele)
        if head is None:
            head=newNode
            tail=newNode
        else:
            tail.next=newNode
            tail=newNode
    return head
            

def printll(head):
    while head is not None:
        print(head.data,end=" ")
        head=head.next
    

# Main
# Read the link list elements including -1
head=ll()
# Create a Linked list after removing -1 from list

i=int(input())
l = delete(head, i)
printll(l)
